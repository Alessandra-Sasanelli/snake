Position tracking:
    - make-positions: Number Number Number List<Posn> -> List<Posn>
      used to compute the positions on the background
      the result of this function is the BACKGROUNDPOS constant

    - increment-pos: Number -> Number
      increments either the x or y coordinate of a posn by 25

    - decrement-pos: Number -> Number
      decrements either the x or y coordinate of a posn by 25

    - compute-available-pos: Snake Apple List<Posn> -> List<Posn>
      used to compute the available positions on the Background

    - compute-apple-position: Number Number List<Posn> -> Apple
      used to calculate the position of the apple

    - check-position-out: Posn List<Posn> -> Boolean
      checks wheather a Posn is inside a List<Posn>
    
Snake:
    - draw-snake: Snake -> Image
      used to draw the snake on the Background

    - change-snake-direction: String Snake -> Snake
      used to change snake direction

AppState:
    - draw-appstate: AppState -> Image
      draws the appstate at moment

    - move: AppState -> AppState
      used to change the appstate on tick (the only element that is changing is actually the snake)

    - time-tick: AppState -> Number
      used to increment the tick based on the snake length

    - reset: AppState -> AppState
      used to reset the state to the DEFAULT state

    - quit: AppState -> AppState
      used to quit the application

    - handle-keyboard: AppState KeyboardEvent -> AppState
      used to handle every key pressed 
      
    - end?: AppState -> Boolean
      used to stop the game if the snake has hit the border


Else:
    - added some tests to functions

